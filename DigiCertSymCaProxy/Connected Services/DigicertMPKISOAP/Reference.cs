//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", ConfigurationName="DigicertMPKISOAP.CertificateManagementOperations")]
    public interface CertificateManagementOperations {
        
        // CODEGEN: Generating message contract since the operation bulkUpdateCertificateStatus is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/bulkUpdateCertificateS" +
            "tatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusResponse bulkUpdateCertificateStatus(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/bulkUpdateCertificateS" +
            "tatus", ReplyAction="*")]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusResponse> bulkUpdateCertificateStatusAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation updateCertificateStatus is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/updateCertificateStatu" +
            "s", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusResponse updateCertificateStatus(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/updateCertificateStatu" +
            "s", ReplyAction="*")]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusResponse> updateCertificateStatusAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation searchCertificate is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/searchCertificate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateResponse searchCertificate(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/searchCertificate", ReplyAction="*")]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateResponse> searchCertificateAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest request);
        
        // CODEGEN: Generating message contract since the operation keyRecovery is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/keyRecovery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryResponse keyRecovery(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.verisign.com/pkiservices/2009/07/management/keyRecovery", ReplyAction="*")]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryResponse> keyRecoveryAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest request);
        
        // CODEGEN: Generating message contract since the operation printMyBean is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanResponse printMyBean(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanResponse> printMyBeanAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class BulkUpdateCertificateStatusRequestType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string versionField;
        
        private RevokeReasonCodeEnum revocationReasonField;
        
        private bool revocationReasonFieldSpecified;
        
        private string commentField;
        
        private string[] certificateSerialNumberField;
        
        private string[] seatIdField;
        
        private string[] profileOIDField;
        
        private OperationTypeEnum operationTypeField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public RevokeReasonCodeEnum revocationReason {
            get {
                return this.revocationReasonField;
            }
            set {
                this.revocationReasonField = value;
                this.RaisePropertyChanged("revocationReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revocationReasonSpecified {
            get {
                return this.revocationReasonFieldSpecified;
            }
            set {
                this.revocationReasonFieldSpecified = value;
                this.RaisePropertyChanged("revocationReasonSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("certificateSerialNumber", IsNullable=true, Order=4)]
        public string[] certificateSerialNumber {
            get {
                return this.certificateSerialNumberField;
            }
            set {
                this.certificateSerialNumberField = value;
                this.RaisePropertyChanged("certificateSerialNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("seatId", IsNullable=true, Order=5)]
        public string[] seatId {
            get {
                return this.seatIdField;
            }
            set {
                this.seatIdField = value;
                this.RaisePropertyChanged("seatId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("profileOID", IsNullable=true, Order=6)]
        public string[] profileOID {
            get {
                return this.profileOIDField;
            }
            set {
                this.profileOIDField = value;
                this.RaisePropertyChanged("profileOID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public OperationTypeEnum operationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
                this.RaisePropertyChanged("operationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=8)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public enum RevokeReasonCodeEnum {
        
        /// <remarks/>
        Unspecified,
        
        /// <remarks/>
        KeyCompromise,
        
        /// <remarks/>
        CACompromise,
        
        /// <remarks/>
        AffiliationChanged,
        
        /// <remarks/>
        CessationOfOperation,
        
        /// <remarks/>
        PrivilegeWithdrawn,
        
        /// <remarks/>
        AACompromise,
        
        /// <remarks/>
        Superseded,
        
        /// <remarks/>
        CertificateHold,
        
        /// <remarks/>
        RemoveFromCRL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public enum OperationTypeEnum {
        
        /// <remarks/>
        Revoke,
        
        /// <remarks/>
        Suspend,
        
        /// <remarks/>
        Resume,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class RequestKeyRecoveryResponseMessageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string serverTransactionIDField;
        
        private int adminApprovalPendingCountField;
        
        private bool adminApprovalPendingCountFieldSpecified;
        
        private string pKCS12PasswordField;
        
        private string[] pKCS12MessageField;
        
        private string versionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string serverTransactionID {
            get {
                return this.serverTransactionIDField;
            }
            set {
                this.serverTransactionIDField = value;
                this.RaisePropertyChanged("serverTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int adminApprovalPendingCount {
            get {
                return this.adminApprovalPendingCountField;
            }
            set {
                this.adminApprovalPendingCountField = value;
                this.RaisePropertyChanged("adminApprovalPendingCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool adminApprovalPendingCountSpecified {
            get {
                return this.adminApprovalPendingCountFieldSpecified;
            }
            set {
                this.adminApprovalPendingCountFieldSpecified = value;
                this.RaisePropertyChanged("adminApprovalPendingCountSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string pKCS12Password {
            get {
                return this.pKCS12PasswordField;
            }
            set {
                this.pKCS12PasswordField = value;
                this.RaisePropertyChanged("pKCS12Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("pKCS12Message", Order=4)]
        public string[] pKCS12Message {
            get {
                return this.pKCS12MessageField;
            }
            set {
                this.pKCS12MessageField = value;
                this.RaisePropertyChanged("pKCS12Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class RequestKeyRecoveryMessageType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string pKCS12PasswordField;
        
        private string certificateSerialNumberField;
        
        private string certificateIssuerField;
        
        private string adminIDField;
        
        private string versionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string pKCS12Password {
            get {
                return this.pKCS12PasswordField;
            }
            set {
                this.pKCS12PasswordField = value;
                this.RaisePropertyChanged("pKCS12Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string certificateSerialNumber {
            get {
                return this.certificateSerialNumberField;
            }
            set {
                this.certificateSerialNumberField = value;
                this.RaisePropertyChanged("certificateSerialNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string certificateIssuer {
            get {
                return this.certificateIssuerField;
            }
            set {
                this.certificateIssuerField = value;
                this.RaisePropertyChanged("certificateIssuer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string adminID {
            get {
                return this.adminIDField;
            }
            set {
                this.adminIDField = value;
                this.RaisePropertyChanged("adminID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class CertificateSearchResultType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] certificateField;
        
        private string seatIdField;
        
        private string commonNameField;
        
        private string accountIdField;
        
        private string profileOIDField;
        
        private string emailAddressField;
        
        private CertificateStatusEnum statusField;
        
        private long revokeAtField;
        
        private bool revokeAtFieldSpecified;
        
        private RevokeReasonCodeEnum revokeReasonField;
        
        private bool revokeReasonFieldSpecified;
        
        private long validFromField;
        
        private long validToField;
        
        private string serialNumberField;
        
        private bool isEscrowedField;
        
        private string enrollmentNotesField;
        
        private string revokeCommentsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] certificate {
            get {
                return this.certificateField;
            }
            set {
                this.certificateField = value;
                this.RaisePropertyChanged("certificate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string seatId {
            get {
                return this.seatIdField;
            }
            set {
                this.seatIdField = value;
                this.RaisePropertyChanged("seatId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string commonName {
            get {
                return this.commonNameField;
            }
            set {
                this.commonNameField = value;
                this.RaisePropertyChanged("commonName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
                this.RaisePropertyChanged("accountId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string profileOID {
            get {
                return this.profileOIDField;
            }
            set {
                this.profileOIDField = value;
                this.RaisePropertyChanged("profileOID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("emailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public CertificateStatusEnum status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public long revokeAt {
            get {
                return this.revokeAtField;
            }
            set {
                this.revokeAtField = value;
                this.RaisePropertyChanged("revokeAt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revokeAtSpecified {
            get {
                return this.revokeAtFieldSpecified;
            }
            set {
                this.revokeAtFieldSpecified = value;
                this.RaisePropertyChanged("revokeAtSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public RevokeReasonCodeEnum revokeReason {
            get {
                return this.revokeReasonField;
            }
            set {
                this.revokeReasonField = value;
                this.RaisePropertyChanged("revokeReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revokeReasonSpecified {
            get {
                return this.revokeReasonFieldSpecified;
            }
            set {
                this.revokeReasonFieldSpecified = value;
                this.RaisePropertyChanged("revokeReasonSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public long validFrom {
            get {
                return this.validFromField;
            }
            set {
                this.validFromField = value;
                this.RaisePropertyChanged("validFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public long validTo {
            get {
                return this.validToField;
            }
            set {
                this.validToField = value;
                this.RaisePropertyChanged("validTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
                this.RaisePropertyChanged("serialNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool isEscrowed {
            get {
                return this.isEscrowedField;
            }
            set {
                this.isEscrowedField = value;
                this.RaisePropertyChanged("isEscrowed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public string enrollmentNotes {
            get {
                return this.enrollmentNotesField;
            }
            set {
                this.enrollmentNotesField = value;
                this.RaisePropertyChanged("enrollmentNotes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=14)]
        public string revokeComments {
            get {
                return this.revokeCommentsField;
            }
            set {
                this.revokeCommentsField = value;
                this.RaisePropertyChanged("revokeComments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=15)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public enum CertificateStatusEnum {
        
        /// <remarks/>
        VALID,
        
        /// <remarks/>
        EXPIRED,
        
        /// <remarks/>
        REVOKED,
        
        /// <remarks/>
        SUSPENDED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class SearchCertificateResponseType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string serverTransactionIDField;
        
        private int certificateCountField;
        
        private CertificateSearchResultType[] certificateListField;
        
        private bool moreCertificateAvailableField;
        
        private bool moreCertificateAvailableFieldSpecified;
        
        private string versionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string serverTransactionID {
            get {
                return this.serverTransactionIDField;
            }
            set {
                this.serverTransactionIDField = value;
                this.RaisePropertyChanged("serverTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int certificateCount {
            get {
                return this.certificateCountField;
            }
            set {
                this.certificateCountField = value;
                this.RaisePropertyChanged("certificateCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("certificateInformation", IsNullable=false)]
        public CertificateSearchResultType[] certificateList {
            get {
                return this.certificateListField;
            }
            set {
                this.certificateListField = value;
                this.RaisePropertyChanged("certificateList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool moreCertificateAvailable {
            get {
                return this.moreCertificateAvailableField;
            }
            set {
                this.moreCertificateAvailableField = value;
                this.RaisePropertyChanged("moreCertificateAvailable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool moreCertificateAvailableSpecified {
            get {
                return this.moreCertificateAvailableFieldSpecified;
            }
            set {
                this.moreCertificateAvailableFieldSpecified = value;
                this.RaisePropertyChanged("moreCertificateAvailableSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class SearchCertificateRequestType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string seatIdField;
        
        private string accountIdField;
        
        private string profileOIDField;
        
        private string commonNameField;
        
        private CertificateStatusEnum statusField;
        
        private bool statusFieldSpecified;
        
        private string emailAddressField;
        
        private string serialNumberField;
        
        private byte[] issuingCAField;
        
        private long validFromField;
        
        private bool validFromFieldSpecified;
        
        private long validToField;
        
        private bool validToFieldSpecified;
        
        private int startIndexField;
        
        private bool startIndexFieldSpecified;
        
        private string versionField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string seatId {
            get {
                return this.seatIdField;
            }
            set {
                this.seatIdField = value;
                this.RaisePropertyChanged("seatId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string accountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
                this.RaisePropertyChanged("accountId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string profileOID {
            get {
                return this.profileOIDField;
            }
            set {
                this.profileOIDField = value;
                this.RaisePropertyChanged("profileOID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string commonName {
            get {
                return this.commonNameField;
            }
            set {
                this.commonNameField = value;
                this.RaisePropertyChanged("commonName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public CertificateStatusEnum status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
                this.RaisePropertyChanged("statusSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
                this.RaisePropertyChanged("emailAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
                this.RaisePropertyChanged("serialNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=8)]
        public byte[] issuingCA {
            get {
                return this.issuingCAField;
            }
            set {
                this.issuingCAField = value;
                this.RaisePropertyChanged("issuingCA");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public long validFrom {
            get {
                return this.validFromField;
            }
            set {
                this.validFromField = value;
                this.RaisePropertyChanged("validFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validFromSpecified {
            get {
                return this.validFromFieldSpecified;
            }
            set {
                this.validFromFieldSpecified = value;
                this.RaisePropertyChanged("validFromSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public long validTo {
            get {
                return this.validToField;
            }
            set {
                this.validToField = value;
                this.RaisePropertyChanged("validTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool validToSpecified {
            get {
                return this.validToFieldSpecified;
            }
            set {
                this.validToFieldSpecified = value;
                this.RaisePropertyChanged("validToSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public int startIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
                this.RaisePropertyChanged("startIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startIndexSpecified {
            get {
                return this.startIndexFieldSpecified;
            }
            set {
                this.startIndexFieldSpecified = value;
                this.RaisePropertyChanged("startIndexSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=13)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class UpdateCertificateStatusResponseType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string serverTransactionIDField;
        
        private string versionField;
        
        private int successCodeField;
        
        private string successMsgField;
        
        private int revocationCountField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string serverTransactionID {
            get {
                return this.serverTransactionIDField;
            }
            set {
                this.serverTransactionIDField = value;
                this.RaisePropertyChanged("serverTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int successCode {
            get {
                return this.successCodeField;
            }
            set {
                this.successCodeField = value;
                this.RaisePropertyChanged("successCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string successMsg {
            get {
                return this.successMsgField;
            }
            set {
                this.successMsgField = value;
                this.RaisePropertyChanged("successMsg");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int revocationCount {
            get {
                return this.revocationCountField;
            }
            set {
                this.revocationCountField = value;
                this.RaisePropertyChanged("revocationCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class UpdateCertificateStatusRequestType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string versionField;
        
        private string certificateIssuerField;
        
        private RevokeReasonCodeEnum revocationReasonField;
        
        private bool revocationReasonFieldSpecified;
        
        private string challengeField;
        
        private string commentField;
        
        private string certificateSerialNumberField;
        
        private string seatIdField;
        
        private OperationTypeEnum operationTypeField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string certificateIssuer {
            get {
                return this.certificateIssuerField;
            }
            set {
                this.certificateIssuerField = value;
                this.RaisePropertyChanged("certificateIssuer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public RevokeReasonCodeEnum revocationReason {
            get {
                return this.revocationReasonField;
            }
            set {
                this.revocationReasonField = value;
                this.RaisePropertyChanged("revocationReason");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool revocationReasonSpecified {
            get {
                return this.revocationReasonFieldSpecified;
            }
            set {
                this.revocationReasonFieldSpecified = value;
                this.RaisePropertyChanged("revocationReasonSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
                this.RaisePropertyChanged("challenge");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
                this.RaisePropertyChanged("comment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string certificateSerialNumber {
            get {
                return this.certificateSerialNumberField;
            }
            set {
                this.certificateSerialNumberField = value;
                this.RaisePropertyChanged("certificateSerialNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string seatId {
            get {
                return this.seatIdField;
            }
            set {
                this.seatIdField = value;
                this.RaisePropertyChanged("seatId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public OperationTypeEnum operationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
                this.RaisePropertyChanged("operationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=9)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management")]
    public partial class BulkUpdateCertificateStatusResponseType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientTransactionIDField;
        
        private string serverTransactionIDField;
        
        private string versionField;
        
        private int successCodeField;
        
        private string successMsgField;
        
        private int revocationCountField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string clientTransactionID {
            get {
                return this.clientTransactionIDField;
            }
            set {
                this.clientTransactionIDField = value;
                this.RaisePropertyChanged("clientTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string serverTransactionID {
            get {
                return this.serverTransactionIDField;
            }
            set {
                this.serverTransactionIDField = value;
                this.RaisePropertyChanged("serverTransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int successCode {
            get {
                return this.successCodeField;
            }
            set {
                this.successCodeField = value;
                this.RaisePropertyChanged("successCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string successMsg {
            get {
                return this.successMsgField;
            }
            set {
                this.successMsgField = value;
                this.RaisePropertyChanged("successMsg");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int revocationCount {
            get {
                return this.revocationCountField;
            }
            set {
                this.revocationCountField = value;
                this.RaisePropertyChanged("revocationCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class bulkUpdateCertificateStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="bulkUpdateCertificateStatusRequest", Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.BulkUpdateCertificateStatusRequestType bulkUpdateCertificateStatusRequest1;
        
        public bulkUpdateCertificateStatusRequest() {
        }
        
        public bulkUpdateCertificateStatusRequest(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.BulkUpdateCertificateStatusRequestType bulkUpdateCertificateStatusRequest1) {
            this.bulkUpdateCertificateStatusRequest1 = bulkUpdateCertificateStatusRequest1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class bulkUpdateCertificateStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="bulkUpdateCertificateStatusResponse", Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.BulkUpdateCertificateStatusResponseType bulkUpdateCertificateStatusResponse1;
        
        public bulkUpdateCertificateStatusResponse() {
        }
        
        public bulkUpdateCertificateStatusResponse(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.BulkUpdateCertificateStatusResponseType bulkUpdateCertificateStatusResponse1) {
            this.bulkUpdateCertificateStatusResponse1 = bulkUpdateCertificateStatusResponse1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class updateCertificateStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="updateCertificateStatusRequest", Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.UpdateCertificateStatusRequestType updateCertificateStatusRequest1;
        
        public updateCertificateStatusRequest() {
        }
        
        public updateCertificateStatusRequest(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.UpdateCertificateStatusRequestType updateCertificateStatusRequest1) {
            this.updateCertificateStatusRequest1 = updateCertificateStatusRequest1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class updateCertificateStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="updateCertificateStatusResponse", Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.UpdateCertificateStatusResponseType updateCertificateStatusResponse1;
        
        public updateCertificateStatusResponse() {
        }
        
        public updateCertificateStatusResponse(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.UpdateCertificateStatusResponseType updateCertificateStatusResponse1) {
            this.updateCertificateStatusResponse1 = updateCertificateStatusResponse1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class searchCertificateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="searchCertificateRequest", Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.SearchCertificateRequestType searchCertificateRequest1;
        
        public searchCertificateRequest() {
        }
        
        public searchCertificateRequest(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.SearchCertificateRequestType searchCertificateRequest1) {
            this.searchCertificateRequest1 = searchCertificateRequest1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class searchCertificateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="searchCertificateResponse", Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.SearchCertificateResponseType searchCertificateResponse1;
        
        public searchCertificateResponse() {
        }
        
        public searchCertificateResponse(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.SearchCertificateResponseType searchCertificateResponse1) {
            this.searchCertificateResponse1 = searchCertificateResponse1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class keyRecoveryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.RequestKeyRecoveryMessageType requestKeyRecoveryMessage;
        
        public keyRecoveryRequest() {
        }
        
        public keyRecoveryRequest(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.RequestKeyRecoveryMessageType requestKeyRecoveryMessage) {
            this.requestKeyRecoveryMessage = requestKeyRecoveryMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class keyRecoveryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.verisign.com/pkiservices/2009/07/management", Order=0)]
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.RequestKeyRecoveryResponseMessageType requestKeyRecoveryResponseMessage;
        
        public keyRecoveryResponse() {
        }
        
        public keyRecoveryResponse(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.RequestKeyRecoveryResponseMessageType requestKeyRecoveryResponseMessage) {
            this.requestKeyRecoveryResponseMessage = requestKeyRecoveryResponseMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class printMyBeanRequest {
        
        public printMyBeanRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class printMyBeanResponse {
        
        public printMyBeanResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CertificateManagementOperationsChannel : Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CertificateManagementOperationsClient : System.ServiceModel.ClientBase<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations>, Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations {
        
        public CertificateManagementOperationsClient() {
        }
        
        public CertificateManagementOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CertificateManagementOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertificateManagementOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertificateManagementOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusResponse Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.bulkUpdateCertificateStatus(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest request) {
            return base.Channel.bulkUpdateCertificateStatus(request);
        }
        
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.BulkUpdateCertificateStatusResponseType bulkUpdateCertificateStatus(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.BulkUpdateCertificateStatusRequestType bulkUpdateCertificateStatusRequest1) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest();
            inValue.bulkUpdateCertificateStatusRequest1 = bulkUpdateCertificateStatusRequest1;
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusResponse retVal = ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).bulkUpdateCertificateStatus(inValue);
            return retVal.bulkUpdateCertificateStatusResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusResponse> Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.bulkUpdateCertificateStatusAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest request) {
            return base.Channel.bulkUpdateCertificateStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusResponse> bulkUpdateCertificateStatusAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.BulkUpdateCertificateStatusRequestType bulkUpdateCertificateStatusRequest1) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.bulkUpdateCertificateStatusRequest();
            inValue.bulkUpdateCertificateStatusRequest1 = bulkUpdateCertificateStatusRequest1;
            return ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).bulkUpdateCertificateStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusResponse Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.updateCertificateStatus(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest request) {
            return base.Channel.updateCertificateStatus(request);
        }
        
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.UpdateCertificateStatusResponseType updateCertificateStatus(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.UpdateCertificateStatusRequestType updateCertificateStatusRequest1) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest();
            inValue.updateCertificateStatusRequest1 = updateCertificateStatusRequest1;
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusResponse retVal = ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).updateCertificateStatus(inValue);
            return retVal.updateCertificateStatusResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusResponse> Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.updateCertificateStatusAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest request) {
            return base.Channel.updateCertificateStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusResponse> updateCertificateStatusAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.UpdateCertificateStatusRequestType updateCertificateStatusRequest1) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.updateCertificateStatusRequest();
            inValue.updateCertificateStatusRequest1 = updateCertificateStatusRequest1;
            return ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).updateCertificateStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateResponse Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.searchCertificate(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest request) {
            return base.Channel.searchCertificate(request);
        }
        
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.SearchCertificateResponseType searchCertificate(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.SearchCertificateRequestType searchCertificateRequest1) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest();
            inValue.searchCertificateRequest1 = searchCertificateRequest1;
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateResponse retVal = ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).searchCertificate(inValue);
            return retVal.searchCertificateResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateResponse> Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.searchCertificateAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest request) {
            return base.Channel.searchCertificateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateResponse> searchCertificateAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.SearchCertificateRequestType searchCertificateRequest1) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.searchCertificateRequest();
            inValue.searchCertificateRequest1 = searchCertificateRequest1;
            return ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).searchCertificateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryResponse Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.keyRecovery(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest request) {
            return base.Channel.keyRecovery(request);
        }
        
        public Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.RequestKeyRecoveryResponseMessageType keyRecovery(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.RequestKeyRecoveryMessageType requestKeyRecoveryMessage) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest();
            inValue.requestKeyRecoveryMessage = requestKeyRecoveryMessage;
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryResponse retVal = ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).keyRecovery(inValue);
            return retVal.requestKeyRecoveryResponseMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryResponse> Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.keyRecoveryAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest request) {
            return base.Channel.keyRecoveryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryResponse> keyRecoveryAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.RequestKeyRecoveryMessageType requestKeyRecoveryMessage) {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.keyRecoveryRequest();
            inValue.requestKeyRecoveryMessage = requestKeyRecoveryMessage;
            return ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).keyRecoveryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanResponse Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.printMyBean(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest request) {
            return base.Channel.printMyBean(request);
        }
        
        public void printMyBean() {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest();
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanResponse retVal = ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).printMyBean(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanResponse> Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations.printMyBeanAsync(Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest request) {
            return base.Channel.printMyBeanAsync(request);
        }
        
        public System.Threading.Tasks.Task<Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanResponse> printMyBeanAsync() {
            Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest inValue = new Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.printMyBeanRequest();
            return ((Keyfactor.AnyGateway.DigiCertSym.DigicertMPKISOAP.CertificateManagementOperations)(this)).printMyBeanAsync(inValue);
        }
    }
}
